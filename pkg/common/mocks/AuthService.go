// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"
	models "gophkeeper/models"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AuthService is an autogenerated mock type for the AuthService type
type AuthService struct {
	mock.Mock
}

// GetUserByToken provides a mock function with given fields: ctx, token
func (_m *AuthService) GetUserByToken(ctx context.Context, token string) (models.User, error) {
	ret := _m.Called(ctx, token)

	var r0 models.User
	if rf, ok := ret.Get(0).(func(context.Context, string) models.User); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(models.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAuthService creates a new instance of AuthService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewAuthService(t testing.TB) *AuthService {
	mock := &AuthService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
