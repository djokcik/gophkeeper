// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	context "context"
	models "gophkeeper/models"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// ClientRecordService is an autogenerated mock type for the ClientRecordService type
type ClientRecordService struct {
	mock.Mock
}

// LoadRecordByKey provides a mock function with given fields: ctx, user, response, loadFn
func (_m *ClientRecordService) LoadRecordByKey(ctx context.Context, user models.ClientUser, response interface{}, loadFn func() (string, error)) error {
	ret := _m.Called(ctx, user, response, loadFn)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.ClientUser, interface{}, func() (string, error)) error); ok {
		r0 = rf(ctx, user, response, loadFn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveRecord provides a mock function with given fields: ctx, user, data, updateFn
func (_m *ClientRecordService) SaveRecord(ctx context.Context, user models.ClientUser, data interface{}, updateFn func(string) error) error {
	ret := _m.Called(ctx, user, data, updateFn)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.ClientUser, interface{}, func(string) error) error); ok {
		r0 = rf(ctx, user, data, updateFn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewClientRecordService creates a new instance of ClientRecordService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewClientRecordService(t testing.TB) *ClientRecordService {
	mock := &ClientRecordService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
