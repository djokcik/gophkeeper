// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	models "gophkeeper/models"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// ClientUserService is an autogenerated mock type for the ClientUserService type
type ClientUserService struct {
	mock.Mock
}

// GetUser provides a mock function with given fields:
func (_m *ClientUserService) GetUser() models.ClientUser {
	ret := _m.Called()

	var r0 models.ClientUser
	if rf, ok := ret.Get(0).(func() models.ClientUser); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(models.ClientUser)
	}

	return r0
}

// SaveUser provides a mock function with given fields: user
func (_m *ClientUserService) SaveUser(user models.ClientUser) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.ClientUser) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewClientUserService creates a new instance of ClientUserService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewClientUserService(t testing.TB) *ClientUserService {
	mock := &ClientUserService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
