// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	clientmodels "gophkeeper/client/clientmodels"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// ActionFileStoreReader is an autogenerated mock type for the ActionFileStoreReader type
type ActionFileStoreReader struct {
	mock.Mock
}

type ActionFileStoreReader_Expecter struct {
	mock *mock.Mock
}

func (_m *ActionFileStoreReader) EXPECT() *ActionFileStoreReader_Expecter {
	return &ActionFileStoreReader_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with given fields:
func (_m *ActionFileStoreReader) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ActionFileStoreReader_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type ActionFileStoreReader_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *ActionFileStoreReader_Expecter) Close() *ActionFileStoreReader_Close_Call {
	return &ActionFileStoreReader_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *ActionFileStoreReader_Close_Call) Run(run func()) *ActionFileStoreReader_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ActionFileStoreReader_Close_Call) Return(_a0 error) *ActionFileStoreReader_Close_Call {
	_c.Call.Return(_a0)
	return _c
}

// ReadActions provides a mock function with given fields:
func (_m *ActionFileStoreReader) ReadActions() (clientmodels.StoreActions, error) {
	ret := _m.Called()

	var r0 clientmodels.StoreActions
	if rf, ok := ret.Get(0).(func() clientmodels.StoreActions); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(clientmodels.StoreActions)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ActionFileStoreReader_ReadActions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadActions'
type ActionFileStoreReader_ReadActions_Call struct {
	*mock.Call
}

// ReadActions is a helper method to define mock.On call
func (_e *ActionFileStoreReader_Expecter) ReadActions() *ActionFileStoreReader_ReadActions_Call {
	return &ActionFileStoreReader_ReadActions_Call{Call: _e.mock.On("ReadActions")}
}

func (_c *ActionFileStoreReader_ReadActions_Call) Run(run func()) *ActionFileStoreReader_ReadActions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ActionFileStoreReader_ReadActions_Call) Return(_a0 clientmodels.StoreActions, _a1 error) *ActionFileStoreReader_ReadActions_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// NewActionFileStoreReader creates a new instance of ActionFileStoreReader. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewActionFileStoreReader(t testing.TB) *ActionFileStoreReader {
	mock := &ActionFileStoreReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
